version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: foodies_postgres
    environment:
      POSTGRES_DB: foodies_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Application
  app:
    build: .
    container_name: foodies_app
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=foodies_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
      - JWT_EXPIRES_IN=7d
      - PORT=3000
      - UPLOAD_PATH=./uploads
      - MAX_FILE_SIZE=5242880
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
